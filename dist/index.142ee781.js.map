{"mappings":"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","sources":["node_modules/@glidejs/glide/dist/glide.modular.esm.js","js/index.js"],"sourcesContent":["/*!\n * Glide.js v3.6.0\n * (c) 2013-2022 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\n    }\n\n    if (settings.classes.hasOwnProperty('type')) {\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\n    }\n\n    if (settings.classes.hasOwnProperty('slide')) {\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\n    }\n\n    if (settings.classes.hasOwnProperty('arrow')) {\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\n    }\n\n    if (settings.classes.hasOwnProperty('nav')) {\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length !== 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item) {\n        item.classList.add(settings.classes.nav.active);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.nav.active);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.nav.active);\n      }\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n\n      if (event.code === 'ArrowRight') {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n      }\n\n      if (event.code === 'ArrowLeft') {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { anchors as Anchors, autoplay as Autoplay, breakpoints as Breakpoints, controls as Controls, images as Images, keyboard as Keyboard, swipe as Swipe, Glide as default };\n","import Glide, {\n  Controls,\n  Autoplay,\n} from \"../node_modules/@glidejs/glide/dist/glide.modular.esm.js\";\n\nnew Glide(\".glide\", {\n  type: \"carousel\",\n  // autoplay: 4000,\n  autoplay: false,\n  hoverpause: false,\n  gap: 0,\n}).mount({ Controls, Autoplay });\n"],"names":["$552a8a7ef6b7ba2d$var$_typeof","obj","Symbol","iterator","constructor","prototype","$552a8a7ef6b7ba2d$var$_classCallCheck","instance","Constructor","TypeError","$552a8a7ef6b7ba2d$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$552a8a7ef6b7ba2d$var$_createClass","protoProps","staticProps","$552a8a7ef6b7ba2d$var$_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","$552a8a7ef6b7ba2d$var$_setPrototypeOf","p","$552a8a7ef6b7ba2d$var$_possibleConstructorReturn","self","call","ReferenceError","$552a8a7ef6b7ba2d$var$_assertThisInitialized","$552a8a7ef6b7ba2d$var$_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","$552a8a7ef6b7ba2d$var$_isNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","$552a8a7ef6b7ba2d$var$_superPropBase","object","property","hasOwnProperty","$552a8a7ef6b7ba2d$var$_get","get","receiver","base","desc","getOwnPropertyDescriptor","value","$552a8a7ef6b7ba2d$var$defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perSwipe","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","waitForTransition","throttle","direction","peek","cloningRatio","breakpoints","classes","swipeable","dragging","ltr","rtl","slider","carousel","slide","clone","active","arrow","disabled","nav","$552a8a7ef6b7ba2d$var$warn","msg","console","error","concat","$552a8a7ef6b7ba2d$var$toInt","parseInt","$552a8a7ef6b7ba2d$var$isString","$552a8a7ef6b7ba2d$var$isObject","$552a8a7ef6b7ba2d$var$isFunction","$552a8a7ef6b7ba2d$var$isUndefined","$552a8a7ef6b7ba2d$var$isArray","Array","$552a8a7ef6b7ba2d$var$mount","glide","extensions","events","components","name","_name","mount","$552a8a7ef6b7ba2d$var$define","prop","definition","$552a8a7ef6b7ba2d$var$mergeOptions","defaults","settings","options","assign","$552a8a7ef6b7ba2d$var$EventsBus","EventsBus","undefined","hop","event","handler","index","push","remove","on","context","emit","forEach","item","$552a8a7ef6b7ba2d$var$Glide$1","Glide","selector","_c","_t","_e","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","_i","_d","status","$552a8a7ef6b7ba2d$var$now","Date","getTime","$552a8a7ef6b7ba2d$var$throttle","func","wait","timeout","args","previous","later","leading","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","$552a8a7ef6b7ba2d$var$MARGIN_TYPE","$552a8a7ef6b7ba2d$var$siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","$552a8a7ef6b7ba2d$var$exist","window","HTMLElement","$552a8a7ef6b7ba2d$var$toArray","nodeList","slice","$552a8a7ef6b7ba2d$var$TRACK_SELECTOR","$552a8a7ef6b7ba2d$var$EventsBinder","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","$552a8a7ef6b7ba2d$var$VALID_DIRECTIONS","$552a8a7ef6b7ba2d$var$FLIPED_MOVEMENTS","$552a8a7ef6b7ba2d$var$Rtl","Components","modify","translate","Direction","is","$552a8a7ef6b7ba2d$var$Gap","multiplier","Math","floor","Sizes","slideWidth","Gaps","$552a8a7ef6b7ba2d$var$Grow","Clones","grow","$552a8a7ef6b7ba2d$var$Peeking","Peek","before","$552a8a7ef6b7ba2d$var$Focusing","width","$552a8a7ef6b7ba2d$var$supportsPassive","$552a8a7ef6b7ba2d$var$opts","$552a8a7ef6b7ba2d$var$supportsPassive$1","$552a8a7ef6b7ba2d$var$CONTROLS_SELECTOR","$552a8a7ef6b7ba2d$var$PREVIOUS_CONTROLS_SELECTOR","$552a8a7ef6b7ba2d$var$NEXT_CONTROLS_SELECTOR","$552a8a7ef6b7ba2d$var$COMPONENTS","Html","Events","root","track","querySelector","collectSlides","slides","wrapper","children","filter","classList","contains","_r","r","document","t","Translate","transform","TRANSFORMERS","mutate","transformer","$552a8a7ef6b7ba2d$var$mutator","translate3d","style","mozTransform","webkitTransform","getStartIndex","isOffset","getTravelDistance","travelDistance","isType","movement","after","startWidth","compose","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","peekIncrementer","cloneCount","round","append","reverse","prepend","max","cloneNode","_clone","unshift","_Components$Html","half","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","_Glide$settings$class","move","calculate","isStart","isEnd","steps","viewSize","calculateForwardIndex","isBound","normalizeForwardIndex","_index","view","ceil","calculateBackwardIndex","normalizeBackwardIndex","_m","step","substr","_Core","subClass","superClass","create","$552a8a7ef6b7ba2d$var$_inherits","_super","passive","Controls","_n","querySelectorAll","_arrowControls","next","addBindings","setActive","removeActive","controls","setArrowState","resetArrowState","disableArrow","_len","lists","_key","list","element","_len2","_key2","removeBindings","elements","click","preventDefault","currentTarget","getAttribute","Autoplay","start","setInterval","stop","time","clearInterval","_this2"],"version":3,"file":"index.142ee781.js.map"}